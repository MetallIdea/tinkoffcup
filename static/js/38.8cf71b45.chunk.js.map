{"version":3,"file":"static/js/38.8cf71b45.chunk.js","mappings":"yJAUO,SAASA,EAASC,GAAwE,IAArEC,EAAID,EAAJC,KAAMC,EAAKF,EAALE,MAAOC,EAAQH,EAARG,SAAUC,EAAKJ,EAALI,MAAOC,EAAQL,EAARK,SAAUC,EAAQN,EAARM,SAClE,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAyBC,MAAO,CAACJ,SAAAA,GAAUC,SAAA,EACxDI,EAAAA,EAAAA,KAAA,SAAOC,QAASV,EAAKK,SAAEJ,IACtBI,EAECH,GACEO,EAAAA,EAAAA,KAAA,SAAOE,GAAE,GAAAC,OAAKZ,EAAI,SAAQK,SACvBH,IAED,KAGJC,GACAM,EAAAA,EAAAA,KAAA,SAAOE,GAAE,GAAAC,OAAKZ,EAAI,UAAUO,UAAU,UAASF,SAC5CF,IAEC,OAIZ,C,oFC9BA,EAAuB,wBAAvB,EAAyD,2B,mJCiB5CU,GAAkBC,EAAAA,EAAAA,KAAS,WACtC,IAAMC,GAAWC,EAAAA,EAAAA,MAEjBC,GAAwFC,EAAAA,EAAAA,MAAhFC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAOJ,EAAPI,QAASC,EAAaL,EAAbK,cAAeC,EAAYN,EAAZM,aAAcC,EAAUP,EAAVO,WAAYC,EAASR,EAATQ,UAE1EC,GAAoCC,EAAAA,EAAAA,UAAqBC,EAAAA,EAAAA,YAA2BC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA7EK,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAehC,OACEvB,EAAAA,EAAAA,MAAC2B,EAAAA,GAAI,CAAA5B,SAAA,EACHC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBF,SAAA,EACrCI,EAAAA,EAAAA,KAACX,EAAAA,EAAS,CAACE,KAAK,QAAQC,MAAM,QAAQE,MAAOkB,EAAQa,MAAQd,EAAOc,WAAQC,EAAY/B,SAAS,QAAOC,UACtGI,EAAAA,EAAAA,KAAC2B,EAAAA,EAAS,CAACzB,GAAG,QAAQX,KAAK,QAAQqC,MAAOlB,EAAOe,MAAOI,SAAUf,EAAcgB,OAAQf,OAE1Ff,EAAAA,EAAAA,KAACX,EAAAA,EAAS,CAACE,KAAK,OAAOC,MAAM,OAAOE,MAAOkB,EAAQmB,KAAOpB,EAAOoB,UAAOL,EAAW/B,SAAS,QAAOC,UACjGI,EAAAA,EAAAA,KAACgC,EAAAA,EAAW,CACV9B,GAAG,OACHX,KAAK,OACLqC,MAAOlB,EAAOqB,KACdF,SAfe,SAAHI,GAA2C,IAArCL,EAAKK,EAALL,MAC1Bf,EAAc,OAAQe,EACxB,EAcUE,OAAQf,EACRmB,kBAAmB,EACnBC,kBAAmB,OAGvBnC,EAAAA,EAAAA,KAACX,EAAAA,EAAS,CAACE,KAAK,OAAOC,MAAM,OAAOG,SAAS,QAAOC,UAClDI,EAAAA,EAAAA,KAACoC,EAAAA,EAAQ,CAACC,UAAQ,EAACC,WAAW,WAAWpC,GAAG,OAAOX,KAAK,OAAOqC,MAAOlB,EAAO6B,KAAMV,SAAUf,EAAcgB,OAAQf,OAErHf,EAAAA,EAAAA,KAACX,EAAAA,EAAS,CAACE,KAAK,WAAWC,MAAM,WAAWG,SAAS,QAAOC,UAC1DI,EAAAA,EAAAA,KAACwC,EAAAA,EAAY,CACXtC,GAAG,WACHX,KAAK,WACLkD,MAAM,QACNb,MAAOlB,EAAOgC,SACdC,YAAarB,EACbsB,eAnCW,SAAHtD,GAA8C,IAAxCuD,EAAKvD,EAALuD,MACtBtB,EAAcJ,EAAAA,EAAAA,eAA+B0B,GAC/C,EAkCUhB,SAAUf,EACVgC,UAAQ,OAEZ9C,EAAAA,EAAAA,KAACX,EAAAA,EAAS,CAACE,KAAK,cAAcC,MAAM,cAAaI,UAC/CI,EAAAA,EAAAA,KAAC+C,EAAAA,EAAa,CAAC7C,GAAG,cAAcX,KAAK,cAAcqC,MAAOlB,EAAOsC,YAAanB,SAAUf,EAAcgB,OAAQf,UAGlHlB,EAAAA,EAAAA,MAAA,OAAKC,UAAWmD,IAAW,iCAAkCC,GAAgBtD,SAAA,EAC3EI,EAAAA,EAAAA,KAACmD,EAAAA,EAAM,CAACC,KAAK,SAAS5D,MAAM,SAASM,UAAU,qBAAqBuD,QAjDrD,WACnBrC,IACAV,EAAS,IACX,KA+CMN,EAAAA,EAAAA,KAACmD,EAAAA,EAAM,CAACC,KAAK,SAAS5D,MAAM,gBAIpC,I,UCtEO,IAAM8D,GAAYjD,EAAAA,EAAAA,KAAS,WAChC,IAAQH,GAAOqD,EAAAA,EAAAA,MAAPrD,IAIRsD,EAAAA,EAAAA,YAAU,WACJtD,GAAa,QAAPA,GACRuD,EAAAA,EAAAA,UAAqBvD,EAEzB,IAEA,IAAAwD,ECLK,WAA+B,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC7BhE,GAAWC,EAAAA,EAAAA,MAkDjB,MAAO,CACLgE,aAjD+B,CAC/BrE,GAAuB,QAArByD,EAAiB,QAAjBC,EAAEH,EAAAA,EAAAA,YAAe,IAAAG,OAAA,EAAfA,EAAiB1D,UAAE,IAAAyD,EAAAA,EAAI,GAC3BlC,MAA6B,QAAxBoC,EAAiB,QAAjBC,EAAEL,EAAAA,EAAAA,YAAe,IAAAK,OAAA,EAAfA,EAAiBrC,aAAK,IAAAoC,EAAAA,EAAI,GACjCb,YAAyC,QAA9Be,EAAiB,QAAjBC,EAAEP,EAAAA,EAAAA,YAAe,IAAAO,OAAA,EAAfA,EAAiBhB,mBAAW,IAAAe,EAAAA,EAAI,GAC7CxB,KAA2B,QAAvB0B,EAAiB,QAAjBC,EAAET,EAAAA,EAAAA,YAAe,IAAAS,OAAA,EAAfA,EAAiB3B,YAAI,IAAA0B,EAAAA,EAAI,IAAIO,KACnC9B,SAAmC,QAA3ByB,EAAiB,QAAjBC,EAAEX,EAAAA,EAAAA,YAAe,IAAAW,OAAA,EAAfA,EAAiB1B,gBAAQ,IAAAyB,EAAAA,EAAI,KACvCpC,KAA2B,QAAvBsC,EAAiB,QAAjBC,EAAEb,EAAAA,EAAAA,YAAe,IAAAa,OAAA,EAAfA,EAAiBvC,YAAI,IAAAsC,EAAAA,EAAI,GA4C/BI,SAzCe,SAAC/D,GAChB,IAAMC,EAAmC,CAAC,EAmB1C,OAjBKD,EAAOe,QACVd,EAAOc,MAAQ,qBAGZf,EAAO6B,OACV5B,EAAO4B,KAAO,oBAGX7B,EAAOqB,KAEDrB,EAAOqB,KAAO,KACvBpB,EAAOoB,KAAO,oCACLrB,EAAOqB,MAAQ,IACxBpB,EAAOoB,KAAO,qCAJdpB,EAAOoB,KAAO,mBAQTpB,CACT,EAqBE+D,aAnBmB,SAAChE,EAAkBpB,GAA+D,IAA3DqF,EAAarF,EAAbqF,cAAe3D,EAAS1B,EAAT0B,UACzDN,EAAOgC,SAAWvB,EAAAA,EAAAA,eAA+BT,EAAOgC,UAEpDe,EAAAA,EAAAA,KACFA,EAAAA,EAAAA,WAAsB/C,GAEtB+C,EAAAA,EAAAA,WAAsB/C,GAGxBiE,GAAc,GAEd3D,IAEAV,EAAS,IACX,EAOF,CDnDmDsE,GAAzCL,EAAYb,EAAZa,aAAcE,EAAQf,EAARe,SAAUC,EAAYhB,EAAZgB,aAEhC,OACE1E,EAAAA,EAAAA,KAAA,OAAKF,UAAWoD,EAAYtD,UAC1BI,EAAAA,EAAAA,KAAC6E,EAAAA,GAAM,CAAaC,cAAeP,EAAcE,SAAUA,EAAUM,SAAUL,EAAcM,oBAAkB,EAAApF,UAC7GI,EAAAA,EAAAA,KAACI,EAAe,OAIxB,G,mGEgBae,EAAkB,IAzCH,WAK1B,SAAA8D,KAAcC,EAAAA,EAAAA,GAAA,KAAAD,GAAA,KAJd3D,WAAyB,GAAG,KAE5B6D,wBAAyB,GAGvBC,EAAAA,EAAAA,IAAmBC,KACrB,CA+BC,OA/BAC,EAAAA,EAAAA,GAAAL,EAAA,EAAAM,IAAA,iBAAA3D,MAED,SAAe4D,GACb,OAAOH,KAAK/D,WAAWmE,QAAO,SAAAnG,GAAQ,OAAAA,EAALmC,MAAkBiE,SAASF,EAAO,GACrE,GAAC,CAAAD,IAAA,iBAAA3D,MAED,SAAe+D,GACb,GAA6B,kBAAlBA,EAA4B,CACrC,IAAMjD,EAAW2C,KAAK/D,WAAWsE,MAAK,SAAA3D,GAAQ,OAAAA,EAALR,QAAsBkE,CAAa,IAC5E,IAAKjD,EAAU,CACb,IAAMmD,EAAc,CAClB3F,IAAI4F,EAAAA,EAAAA,KACJrE,MAAOkE,GAIT,OAFAN,KAAK/D,WAAWyE,KAAKF,GAEdA,CACT,CAEA,OAAOnD,CACT,CAEA,OAAOiD,CACT,GAAC,CAAAJ,IAAA,sBAAA3D,MAED,WACEyD,KAAKF,wBAAyB,CAChC,GAAC,CAAAI,IAAA,sBAAA3D,MAED,WACEyD,KAAKF,wBAAyB,CAChC,KAACF,CAAA,CAtCyB,G,6GC2HfxB,EAAa,IA1HH,WAmBrB,SAAAuC,KAAcd,EAAAA,EAAAA,GAAA,KAAAc,GAAA,KAlBd7E,gBAAkBA,EAAAA,EAAgB,KAElC8E,MAAgB,GAAG,KAEnBlE,UAAI,OAEJmE,cAAwB,GAAG,KAE3BC,aAAe,GAAG,KAElBC,UAAyB,KAAK,KAE9BC,QAAuB,KAAK,KAE5BC,iBAAkC,KAAK,KAEvCC,aAA8B,MAG5BnB,EAAAA,EAAAA,IAAmBC,KACrB,CAkGC,OAlGAC,EAAAA,EAAAA,GAAAU,EAAA,EAAAT,IAAA,YAAA3D,MAED,SAAU4E,GACRnB,KAAKtD,KAAOsD,KAAKY,MAAML,MAAK,SAAAtG,GAAK,OAAAA,EAAFY,KAAesG,CAAM,GACtD,GAAC,CAAAjB,IAAA,UAAA3D,MAED,SAAQG,GACNsD,KAAKtD,KAAOA,CACd,GAAC,CAAAwD,IAAA,aAAA3D,MAED,SAAWG,GAKT,OAJAA,EAAK7B,IAAK4F,EAAAA,EAAAA,KAEVT,KAAKY,MAAMF,KAAKhE,GAETA,CACT,GAAC,CAAAwD,IAAA,aAAA3D,MAED,SAAWG,GACT,IAAM0E,EAAQpB,KAAKY,MAAMS,WAAU,SAAAzE,GAAK,OAAAA,EAAF/B,KAAe6B,EAAK7B,EAAE,IAM5D,OAJIuG,GAAS,IACXpB,KAAKY,MAAMQ,GAAS1E,GAGfA,CACT,GAAC,CAAAwD,IAAA,aAAA3D,MAED,SAAW4E,GACT,IAAMC,EAAQpB,KAAKY,MAAMS,WAAU,SAAAC,GAAK,OAAAA,EAAFzG,KAAesG,CAAM,IAEvDC,GAAS,IACXpB,KAAKY,MAAMW,OAAOH,EAAO,GACzBpB,KAAKI,SAET,GAAC,CAAAF,IAAA,aAAA3D,MAED,SAAWiF,GACTxB,KAAKc,aAAeU,EACpBxB,KAAKI,QACP,GAAC,CAAAF,IAAA,oBAAA3D,MAED,SAAkBW,GAChB8C,KAAKe,UAAY7D,EACjB8C,KAAKI,QACP,GAAC,CAAAF,IAAA,kBAAA3D,MAED,SAAgBW,GACd8C,KAAKgB,QAAU9D,EACf8C,KAAKI,QACP,GAAC,CAAAF,IAAA,qBAAA3D,MAED,SAAmBc,GACjB2C,KAAKiB,iBAAmB5D,EACxB2C,KAAKI,QACP,GAAC,CAAAF,IAAA,SAAA3D,MAED,WAAU,IAADkF,EAAA,KACPzB,KAAKa,cAAgBb,KAAKY,MAAMR,QAAO,SAAC1D,GACtC,IAe2BgF,EAfvBC,GAAa,EAQjB,GAPIF,EAAKX,eACPa,EAAaA,GAAcjF,EAAKN,MAAMiE,SAASoB,EAAKX,eAElDW,EAAKV,YACPY,EAAaA,GACRjF,EAAKQ,KAAK0E,UAAYH,EAAKV,UAAUa,WAExCH,EAAKT,QAAS,CAChB,IAAMA,EAAU,IAAI7B,KAAKsC,EAAKT,SAC9BA,EAAQa,QAAQJ,EAAKT,QAAQc,UAAY,GACzCH,EAAaA,GACRjF,EAAKQ,KAAK0E,UAAYZ,EAAQY,SACrC,CAEIH,EAAKR,mBACPU,EAAaA,IACK,QAAbD,EAAAhF,EAAKW,gBAAQ,IAAAqE,OAAA,EAAbA,EAAe7G,MAAO4G,EAAKR,kBAGlC,OAAOU,CACT,IAAGI,MAAK,SAACC,EAAGC,GACV,OAAOD,EAAE9E,KAAO+E,EAAE/E,MAAQ,EAAI,CAChC,GACF,GAAC,CAAAgD,IAAA,cAAA3D,MAED,WACEyD,KAAKc,aAAe,GACpBd,KAAKe,UAAY,KACjBf,KAAKgB,QAAU,KACfhB,KAAKiB,iBAAmB,IAC1B,GAAC,CAAAf,IAAA,kBAAA3D,MAED,SAAgB1B,GACdmF,KAAKkB,aAAerG,CACtB,GAAC,CAAAqF,IAAA,kBAAA3D,MAED,WACEyD,KAAKkB,aAAe,IACtB,KAACP,CAAA,CAvHoB,G","sources":["core/components/form/FormField.tsx","webpack://tinkoffcup/./src/modules/CostsForm/CostsForm.module.scss?760f","modules/CostsForm/CostsFormFields.tsx","modules/CostsForm/CostsForm.tsx","modules/CostsForm/useCostsFormFormik.ts","store/CategoriesStore.ts","store/CostsStore.ts"],"sourcesContent":["import { PropsWithChildren } from 'react';\n\nexport type FormFieldProps = PropsWithChildren & {\n  name: string;\n  label?: string;\n  helpText?: string;\n  error?: string;\n  maxWidth?: string;\n}\n\nexport function FormField({ name, label, helpText, error, maxWidth, children }: FormFieldProps) {\n  return (\n    <div className=\"flex flex-column gap-2\" style={{maxWidth}}>\n      <label htmlFor={name}>{label}</label>\n      {children}\n      {\n        helpText ? (\n          <small id={`${name}-help`}>\n            {helpText}\n          </small>\n        ) : null\n      }\n      {\n        error ? (\n        <small id={`${name}-error`} className=\"p-error\">\n          {error}\n        </small>\n        ) : null\n      }\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"self\":\"CostsForm_self__Y3nBm\",\"buttons\":\"CostsForm_buttons__weLMG\"};","import { observer } from 'mobx-react-lite';\nimport { FormField } from '../../core/components/form/FormField';\nimport { InputText } from 'primereact/inputtext';\nimport { Form, useFormikContext } from 'formik';\nimport { FormValues } from './useCostsFormFormik';\nimport { InputTextarea } from 'primereact/inputtextarea';\nimport { Button } from 'primereact/button';\nimport { useNavigate } from 'react-router-dom';\nimport { Calendar } from 'primereact/calendar';\nimport { AutoComplete, AutoCompleteCompleteEvent } from 'primereact/autocomplete';\nimport { categoriesStore } from '../../store/CategoriesStore';\nimport { useState } from 'react';\nimport { Category } from '../../core/types/costs';\nimport { InputNumber, InputNumberChangeEvent } from 'primereact/inputnumber';\nimport classNames from 'classnames';\n\nimport styles  from './CostsForm.module.scss';\n\nexport const CostsFormFields = observer(function CostsFormFields() {\n  const navigate = useNavigate();\n\n  const { values, errors, touched, setFieldValue, handleChange, handleBlur, resetForm } = useFormikContext<FormValues>();\n\n  const [categories, setCategories] = useState<Category[]>(categoriesStore.categories);\n\n  const handleCancel = () => {\n    resetForm();\n    navigate('/');\n  }\n\n  const handleSearch = ({ query }: AutoCompleteCompleteEvent) => {\n    setCategories(categoriesStore.findCategories(query));\n  }\n\n  const handleChangeCost = ({ value }: InputNumberChangeEvent) => {\n    setFieldValue('cost', value);\n  }\n\n  return (\n    <Form>\n      <div className=\"flex flex-column gap-3\">\n        <FormField name=\"title\" label=\"Title\" error={touched.title ? errors.title : undefined}  maxWidth=\"500px\">\n          <InputText id=\"title\" name=\"title\" value={values.title} onChange={handleChange} onBlur={handleBlur} />\n        </FormField>\n        <FormField name=\"cost\" label=\"Cost\" error={touched.cost ? errors.cost : undefined} maxWidth=\"500px\">\n          <InputNumber\n            id=\"cost\"\n            name=\"cost\"\n            value={values.cost}\n            onChange={handleChangeCost}\n            onBlur={handleBlur}\n            minFractionDigits={0}\n            maxFractionDigits={2}\n          />\n        </FormField>\n        <FormField name=\"date\" label=\"Date\" maxWidth=\"200px\">\n          <Calendar showIcon dateFormat=\"dd.mm.yy\" id=\"date\" name=\"date\" value={values.date} onChange={handleChange} onBlur={handleBlur} />\n        </FormField>\n        <FormField name=\"category\" label=\"Category\" maxWidth=\"500px\">\n          <AutoComplete\n            id=\"category\"\n            name=\"category\"\n            field=\"title\"\n            value={values.category}\n            suggestions={categories}\n            completeMethod={handleSearch}\n            onChange={handleChange}\n            dropdown />\n        </FormField>\n        <FormField name=\"description\" label=\"Description\">\n          <InputTextarea id=\"description\" name=\"description\" value={values.description} onChange={handleChange} onBlur={handleBlur} />\n        </FormField>\n      </div>\n      <div className={classNames('flex justify-content-end gap-2', styles.buttons)}>\n        <Button type=\"button\" label=\"Cancel\" className=\"p-button-secondary\" onClick={handleCancel} />\n        <Button type=\"submit\" label=\"Submit\" />\n      </div>\n    </Form>\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport styles from './CostsForm.module.scss';\nimport { Formik } from 'formik';\nimport { CostsFormFields } from './CostsFormFields';\nimport { FormValues, useCostsFormFormik } from './useCostsFormFormik';\nimport { useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { costsStore } from '../../store/CostsStore';\n\nexport const CostsForm = observer(function Template() {\n  const { id } = useParams<{\n    id: string;\n  }>();\n\n  useEffect(() => {\n    if (id && id !== 'new') {\n      costsStore.fetchCost(id);\n    }\n  })\n\n  const { initialValue, validate, handleSubmit } = useCostsFormFormik();\n\n  return (\n    <div className={styles.self}>\n      <Formik<FormValues> initialValues={initialValue} validate={validate} onSubmit={handleSubmit} enableReinitialize>\n        <CostsFormFields />\n      </Formik>\n    </div>\n  )\n});\n","import { FormikErrors, FormikHelpers } from 'formik';\nimport { costsStore } from '../../store/CostsStore';\nimport { useNavigate } from 'react-router-dom';\nimport { Category } from '../../core/types/costs';\nimport { categoriesStore } from '../../store/CategoriesStore';\n\nexport type FormValues = {\n  id: string;\n  title: string;\n  description: string;\n  date: Date;\n  category: Category | null;\n  cost: number;\n}\n\nexport function useCostsFormFormik() {\n  const navigate = useNavigate();\n\n  const initialValue: FormValues = {\n    id: costsStore.cost?.id ?? '',\n    title: costsStore.cost?.title ?? '',\n    description: costsStore.cost?.description ?? '',\n    date: costsStore.cost?.date ?? new Date(),\n    category: costsStore.cost?.category ?? null,\n    cost: costsStore.cost?.cost ?? 0,\n  }\n\n  const validate = (values: FormValues) => {\n    const errors: FormikErrors<FormValues> = {};\n\n    if (!values.title) {\n      errors.title = 'Title is required';\n    }\n\n    if (!values.date) {\n      errors.date = 'Date is required';\n    }\n\n    if (!values.cost) {\n      errors.cost = 'Cost is required';\n    } else if (values.cost > 1000000000000) {\n      errors.cost = 'Cost cannot be more 1000000000000';\n    } else if (values.cost <= 0) {\n      errors.cost = 'Cost cannot be less or equal zero';\n    }\n\n\n    return errors;\n  }\n\n  const handleSubmit = (values: FormValues, { setSubmitting, resetForm }: FormikHelpers<FormValues>) => {\n    values.category = categoriesStore.ensureCategory(values.category);\n\n    if (costsStore.cost) {\n      costsStore.updateCost(values);\n    } else {\n      costsStore.createCost(values);\n    }\n\n    setSubmitting(false);\n\n    resetForm();\n\n    navigate('/');\n  }\n\n  return {\n    initialValue,\n    validate,\n    handleSubmit,\n  }\n}\n","import { makeAutoObservable } from 'mobx';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Category } from '../core/types/costs';\n\nexport class CategoriesStore {\n  categories: Category[] = [];\n\n  categoriesModalVisible = false;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  findCategories(search: string): Category[] {\n    return this.categories.filter(({ title }) => title.includes(search));\n  }\n\n  ensureCategory(categoryValue: Category | string | null): Category | null {\n    if (typeof categoryValue === 'string') {\n      const category = this.categories.find(({ title }) => title === categoryValue);\n      if (!category) {\n        const newCategory = {\n          id: uuidv4(),\n          title: categoryValue\n        };\n        this.categories.push(newCategory);\n\n        return newCategory;\n      }\n\n      return category;\n    }\n\n    return categoryValue;\n  }\n\n  showCategoriesModal() {\n    this.categoriesModalVisible = true;\n  }\n\n  hideCategoriesModal() {\n    this.categoriesModalVisible = false;\n  }\n}\n\nexport const categoriesStore = new CategoriesStore();\n","import { makeAutoObservable } from 'mobx';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Cost } from '../core/types/costs';\nimport { categoriesStore } from './CategoriesStore';\n\nexport class CostsStore {\n  categoriesStore = categoriesStore;\n\n  costs: Cost[] = [];\n\n  cost?: Cost;\n\n  filteredCosts: Cost[] = [];\n\n  searchFilter = '';\n\n  startDate: Date | null = null;\n\n  endDate: Date | null = null;\n\n  categoriesFilter: string | null = null;\n\n  deleteItemId: string | null = null;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  fetchCost(costId: string) {\n    this.cost = this.costs.find(({ id}) => id === costId);\n  }\n\n  setCost(cost: Cost) {\n    this.cost = cost;\n  }\n\n  createCost(cost: Cost): Cost {\n    cost.id = uuidv4();\n\n    this.costs.push(cost);\n\n    return cost;\n  }\n\n  updateCost(cost: Cost): Cost {\n    const index = this.costs.findIndex(({ id}) => id === cost.id);\n\n    if (index > -1) {\n      this.costs[index] = cost;\n    }\n\n    return cost;\n  }\n\n  deleteCost(costId: string): void {\n    const index = this.costs.findIndex(({ id}) => id === costId);\n\n    if (index > -1) {\n      this.costs.splice(index, 1);\n      this.filter();\n    }\n  }\n\n  filterCost(text: string): void {\n    this.searchFilter = text;\n    this.filter();\n  }\n\n  filterByStartDate(date: Date | null): void {\n    this.startDate = date;\n    this.filter();\n  }\n\n  filterByEndDate(date: Date | null): void {\n    this.endDate = date;\n    this.filter();\n  }\n\n  filterByCategories(category: string | null): void {\n    this.categoriesFilter = category;\n    this.filter();\n  }\n\n  filter() {\n    this.filteredCosts = this.costs.filter((cost) => {\n      let isFiltered = true;\n      if (this.searchFilter) {\n        isFiltered = isFiltered && cost.title.includes(this.searchFilter)\n      }\n      if (this.startDate) {\n        isFiltered = isFiltered\n          && cost.date.getTime() > this.startDate.getTime()\n      }\n      if (this.endDate) {\n        const endDate = new Date(this.endDate);\n        endDate.setDate(this.endDate.getDate() + 1)\n        isFiltered = isFiltered\n          && cost.date.getTime() < endDate.getTime()\n      }\n\n      if (this.categoriesFilter) {\n        isFiltered = isFiltered\n          && cost.category?.id === this.categoriesFilter;\n      }\n\n      return isFiltered;\n    }).sort((a, b) => {\n      return a.date > b.date ? -1 : 1;\n    });\n  }\n\n  resetFilter() {\n    this.searchFilter = '';\n    this.startDate = null;\n    this.endDate = null;\n    this.categoriesFilter = null;\n  }\n\n  showDeleteModal(id: string) {\n    this.deleteItemId = id;\n  }\n\n  hideDeleteModal() {\n    this.deleteItemId = null;\n  }\n}\n\nexport const costsStore = new CostsStore();\n"],"names":["FormField","_ref","name","label","helpText","error","maxWidth","children","_jsxs","className","style","_jsx","htmlFor","id","concat","CostsFormFields","observer","navigate","useNavigate","_useFormikContext","useFormikContext","values","errors","touched","setFieldValue","handleChange","handleBlur","resetForm","_useState","useState","categoriesStore","_useState2","_slicedToArray","categories","setCategories","Form","title","undefined","InputText","value","onChange","onBlur","cost","InputNumber","_ref2","minFractionDigits","maxFractionDigits","Calendar","showIcon","dateFormat","date","AutoComplete","field","category","suggestions","completeMethod","query","dropdown","InputTextarea","description","classNames","styles","Button","type","onClick","CostsForm","useParams","useEffect","costsStore","_useCostsFormFormik","_costsStore$cost$id","_costsStore$cost","_costsStore$cost$titl","_costsStore$cost2","_costsStore$cost$desc","_costsStore$cost3","_costsStore$cost$date","_costsStore$cost4","_costsStore$cost$cate","_costsStore$cost5","_costsStore$cost$cost","_costsStore$cost6","initialValue","Date","validate","handleSubmit","setSubmitting","useCostsFormFormik","Formik","initialValues","onSubmit","enableReinitialize","CategoriesStore","_classCallCheck","categoriesModalVisible","makeAutoObservable","this","_createClass","key","search","filter","includes","categoryValue","find","newCategory","uuidv4","push","CostsStore","costs","filteredCosts","searchFilter","startDate","endDate","categoriesFilter","deleteItemId","costId","index","findIndex","_ref3","splice","text","_this","_cost$category","isFiltered","getTime","setDate","getDate","sort","a","b"],"sourceRoot":""}
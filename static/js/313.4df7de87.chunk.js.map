{"version":3,"file":"static/js/313.4df7de87.chunk.js","mappings":"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","sources":["core/components/form/FormField.tsx","modules/CostsList/CostsList.module.scss","modules/CostsList/CostsListHeader.tsx","modules/CostsList/CostsListFooter.tsx","modules/CostsList/modals/ChartModal.tsx","modules/CostsList/CostsList.tsx","store/CategoriesStore.ts","store/CostsStore.ts","core/helpers/colors.ts"],"sourcesContent":["import { PropsWithChildren } from 'react';\n\nexport type FormFieldProps = PropsWithChildren & {\n  name: string;\n  label?: string;\n  helpText?: string;\n  error?: string;\n  maxWidth?: string;\n}\n\nexport function FormField({ name, label, helpText, error, maxWidth, children }: FormFieldProps) {\n  return (\n    <div className=\"flex flex-column gap-2\" style={{maxWidth}}>\n      <label htmlFor={name}>{label}</label>\n      {children}\n      {\n        helpText ? (\n          <small id={`${name}-help`}>\n            {helpText}\n          </small>\n        ) : null\n      }\n      {\n        error ? (\n        <small id={`${name}-error`} className=\"p-error\">\n          {error}\n        </small>\n        ) : null\n      }\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {};","import { observer } from 'mobx-react-lite';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'primereact/button';\nimport { InputText } from 'primereact/inputtext';\nimport { costsStore } from '../../store/CostsStore';\nimport { ChangeEventHandler } from 'react';\nimport { Calendar, CalendarChangeEvent } from 'primereact/calendar';\nimport { FormField } from '../../core/components/form/FormField';\nimport { Dropdown, DropdownChangeEvent } from 'primereact/dropdown';\nimport { categoriesStore } from '../../store/CategoriesStore';\n\nexport const CostsListHeader = observer(function CostsListHeader() {\n  const handleChangeSearch: ChangeEventHandler<HTMLInputElement> = (event) => {\n    costsStore.filterCost(event.target.value);\n  }\n\n  const handleChangeStartDate = (event: CalendarChangeEvent) => {\n    costsStore.filterByStartDate(event.value instanceof Date ? event.value : null);\n  }\n\n  const handleChangeEndDate = (event: CalendarChangeEvent) => {\n    costsStore.filterByEndDate(event.value instanceof Date ? event.value : null);\n  }\n\n  const handleChangeCategory = (event: DropdownChangeEvent) => {\n    costsStore.filterByCategories(event.value);\n  }\n\n  const handleClickViewChart = () => {\n    costsStore.showChartModal();\n  }\n\n  return (\n    <div className=\"flex justify-content-between align-items-center\">\n      <div className=\"flex justify-content-between align-items-center gap-2\">\n        <Link to=\"/costs/new\">\n          <Button label=\"New\" />\n        </Link>\n\n        <Button onClick={handleClickViewChart} label=\"View chart\" />\n      </div>\n\n      <div className=\"flex justify-content-end align-items-center gap-2\">\n        <FormField name=\"text\" label=\"Filter by title and cost\">\n          <InputText onChange={handleChangeSearch} />\n        </FormField>\n        <FormField name=\"startDate\" label=\"Start date\">\n          <Calendar maxDate={costsStore.endDate ?? undefined} showIcon dateFormat=\"dd.mm.yy\" id=\"startDate\" name=\"startDate\" showButtonBar onChange={handleChangeStartDate} />\n        </FormField>\n        <FormField name=\"endDate\" label=\"End date\">\n          <Calendar minDate={costsStore.startDate ?? undefined} showIcon dateFormat=\"dd.mm.yy\" id=\"endDate\" name=\"endDate\" showButtonBar onChange={handleChangeEndDate} />\n        </FormField>\n        <FormField name=\"date\" label=\"Filter by category\">\n          <Dropdown\n            value={costsStore.categoriesFilter}\n            options={categoriesStore.categories}\n            optionLabel=\"title\"\n            optionValue=\"id\"\n            onChange={handleChangeCategory}\n            showClear\n          />\n        </FormField>\n      </div>\n    </div>\n  )\n});\n","import { observer } from 'mobx-react-lite';\nimport { costsStore } from '../../store/CostsStore';\n\nexport const CostsListFooter = observer(function CostsListFooter() {\n  const numberFormat = Intl.NumberFormat();\n  return (\n    <div>\n      <div>\n        Total items: {costsStore.filteredCosts.length}\n      </div>\n      <div>\n        Total spent: {numberFormat.format(costsStore.filteredCosts.reduce((prev, curr) => prev + curr.cost, 0))}\n      </div>\n    </div>\n  )\n});\n","import { observer } from 'mobx-react-lite';\nimport { Dialog } from 'primereact/dialog';\nimport { costsStore } from '../../../store/CostsStore';\nimport { Chart } from 'primereact/chart';\nimport { useEffect } from 'react';\n\nexport const ChartModal = observer(function ChartModal() {\n  useEffect(() => {\n    costsStore.calculateChartData();\n  }, []);\n\n  const handleHide = () => {\n    costsStore.hideChartModal();\n  }\n\n  if (!costsStore.chartModalVisible) {\n    return null;\n  }\n\n  return (\n    <Dialog visible onHide={handleHide}>\n      <Chart type=\"doughnut\" data={costsStore.chartData as object} options={{\n        cutout: '60%'\n      }} className=\"w-full md:w-30rem\" />\n    </Dialog>\n  )\n})\n","import { observer } from 'mobx-react-lite';\nimport styles from './CostsList.module.scss';\nimport { costsStore } from '../../store/CostsStore';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'primereact/button';\nimport { Badge } from 'primereact/badge';\nimport { PrimeIcons } from 'primereact/api';\nimport { DataTable } from 'primereact/datatable';\nimport { CostsListHeader } from './CostsListHeader';\nimport { CostsListFooter } from './CostsListFooter';\nimport { Column } from 'primereact/column';\nimport { Cost } from '../../core/types/costs';\nimport { useEffect } from 'react';\nimport { ChartModal } from './modals/ChartModal';\n\nexport const CostsList = observer(function CostsList() {\n  const numberFormat = Intl.NumberFormat();\n  const dateFormat = Intl.DateTimeFormat();\n\n  useEffect(() => {\n    costsStore.filter();\n\n    return () => costsStore.resetFilter();\n  }, []);\n\n  const handleDelete = (id: string) => () => {\n    costsStore.deleteCost(id)\n  }\n\n  return (\n    <div className={styles.self}>\n      <DataTable<Cost[]>\n        value={costsStore.filteredCosts}\n        tableStyle={{ minWidth: '50rem' }}\n        header={<CostsListHeader />}\n        footer={<CostsListFooter />}>\n        <Column field=\"title\" body={(row: Cost) => <Link to={`/costs/${row.id}`}>{row.title}</Link>} />\n        <Column field=\"category\" body={(row: Cost) => <Badge value={row.category?.title ?? 'uncategorized'} />} />\n        <Column field=\"cost\" body={(row: Cost) => numberFormat.format(row.cost)} />\n        <Column field=\"date\" body={(row: Cost) => dateFormat.format(row.date)} />\n        <Column\n          body={\n          (row: Cost) =>\n            <Button onClick={handleDelete(row.id)} icon={PrimeIcons.TRASH} rounded text severity=\"danger\" aria-label=\"Delete\" />\n          }\n        />\n      </DataTable>\n\n      <ChartModal />\n    </div>\n  )\n});\n","import { makeAutoObservable } from 'mobx';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Category } from '../core/types/costs';\n\nexport interface ICategoriesStore {\n  categories: Category[];\n\n  ensureCategory(category: Category | string | null): Category | null;\n}\n\nexport class CategoriesStore implements ICategoriesStore {\n  categories: Category[] = [];\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  findCategories(search: string): Category[] {\n    return this.categories.filter(({ title }) => title.includes(search));\n  }\n\n  ensureCategory(categoryValue: Category | string | null): Category | null {\n    if (typeof categoryValue === 'string') {\n      const category = this.categories.find(({ title }) => title === categoryValue);\n      if (!category) {\n        const newCategory = {\n          id: uuidv4(),\n          title: categoryValue\n        };\n        this.categories.push(newCategory);\n\n        return newCategory;\n      }\n\n      return category;\n    }\n\n    return categoryValue;\n  }\n}\n\nexport const categoriesStore = new CategoriesStore();\n","import { makeAutoObservable } from 'mobx';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Cost } from '../core/types/costs';\nimport { categoriesStore } from './CategoriesStore';\nimport { ChartData } from 'chart.js';\nimport { getRandomColor } from '../core/helpers/colors';\n\nexport interface ICostsStore {\n  costs: Cost[];\n\n  cost?: Cost;\n\n  filteredCosts: Cost[];\n\n  setCost(cost: Cost): void;\n\n  filterCost(text: string): void;\n}\n\nexport class CostsStore implements ICostsStore {\n  categoriesStore = categoriesStore;\n\n  costs: Cost[] = [];\n\n  cost?: Cost;\n\n  filteredCosts: Cost[] = [];\n\n  chartData: ChartData | null = null;\n\n  searchFilter = '';\n\n  startDate: Date | null = null;\n\n  endDate: Date | null = null;\n\n  categoriesFilter: string | null = null;\n\n  chartModalVisible = false;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  fetchCost(costId: string) {\n    this.cost = this.costs.find(({ id}) => id === costId);\n  }\n\n  setCost(cost: Cost) {\n    this.cost = cost;\n  }\n\n  createCost(cost: Cost): Cost {\n    cost.id = uuidv4();\n\n    this.costs.push(cost);\n\n    return cost;\n  }\n\n  updateCost(cost: Cost): Cost {\n    const index = this.costs.findIndex(({ id}) => id === cost.id);\n\n    if (index > -1) {\n      this.costs[index] = cost;\n    }\n\n    return cost;\n  }\n\n  deleteCost(costId: string): void {\n    const index = this.costs.findIndex(({ id}) => id === costId);\n\n    if (index > -1) {\n      this.costs.splice(index, 1);\n    }\n  }\n\n  filterCost(text: string): void {\n    this.searchFilter = text;\n    this.filter();\n  }\n\n  filterByStartDate(date: Date | null): void {\n    this.startDate = date;\n    this.filter();\n  }\n\n  filterByEndDate(date: Date | null): void {\n    this.endDate = date;\n    this.filter();\n  }\n\n  filterByCategories(category: string | null): void {\n    this.categoriesFilter = category;\n    this.filter();\n  }\n\n  filter() {\n    this.filteredCosts = this.costs.filter((cost) => {\n      let isFiltered = true;\n      if (this.searchFilter) {\n        isFiltered = isFiltered && cost.title.includes(this.searchFilter)\n      }\n      if (this.startDate) {\n        isFiltered = isFiltered\n          && cost.date.getTime() > this.startDate.getTime()\n      }\n      if (this.endDate) {\n        const endDate = new Date(this.endDate);\n        endDate.setDate(this.endDate.getDate() + 1)\n        isFiltered = isFiltered\n          && cost.date.getTime() < endDate.getTime()\n      }\n\n      if (this.categoriesFilter) {\n        isFiltered = isFiltered\n          && cost.category?.id === this.categoriesFilter;\n      }\n\n      return isFiltered;\n    }).sort((a, b) => {\n      return a.date > b.date ? -1 : 1;\n    });\n  }\n\n  resetFilter() {\n    this.searchFilter = '';\n    this.startDate = null;\n    this.endDate = null;\n    this.categoriesFilter = null;\n  }\n\n  showChartModal() {\n    this.chartModalVisible = true;\n  }\n\n  hideChartModal() {\n    this.chartModalVisible = false;\n  }\n\n  calculateChartData() {\n    const isUncategorizedExist = this.filteredCosts.some(({ category }) => !category);\n\n    const labels = this.categoriesStore.categories.map(({title}) => title);\n\n    if (isUncategorizedExist) {\n      labels.push('uncategorized');\n    }\n\n    const data = this.categoriesStore.categories.map(({ id }) =>\n      this.filteredCosts.filter(({ category }) => id === category?.id)\n        .reduce((prev, curr) => prev + curr.cost, 0));\n\n    if (isUncategorizedExist) {\n      data.push(this.filteredCosts.filter(({ category }) => !category)\n        .reduce((prev, curr) => prev + curr.cost, 0))\n    }\n\n    this.chartData = {\n      labels,\n      datasets: [\n        {\n          data: this.categoriesStore.categories.map(({ id }) =>\n            this.filteredCosts.filter(({ category }) => id === category?.id)\n              .reduce((prev, curr) => prev + curr.cost, 0)),\n\n          backgroundColor: this.categoriesStore.categories.map(() => getRandomColor()),\n        }\n      ],\n    }\n  }\n}\n\nexport const costsStore = new CostsStore();\n","export function getRandomColor() {\n  var letters = '0123456789ABCDEF';\n  var color = '#';\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n"],"names":["FormField","_ref","name","label","helpText","error","maxWidth","children","_jsxs","className","style","_jsx","htmlFor","id","concat","CostsListHeader","observer","_costsStore$endDate","_costsStore$startDate","Link","to","Button","onClick","costsStore","InputText","onChange","event","target","value","Calendar","maxDate","undefined","showIcon","dateFormat","showButtonBar","Date","minDate","Dropdown","options","categoriesStore","optionLabel","optionValue","showClear","CostsListFooter","numberFormat","Intl","NumberFormat","format","prev","curr","cost","ChartModal","useEffect","Dialog","visible","onHide","Chart","type","data","cutout","CostsList","DateTimeFormat","styles","DataTable","tableStyle","minWidth","header","footer","Column","field","body","row","title","_row$category$title","_row$category","Badge","category","date","icon","PrimeIcons","rounded","text","severity","CategoriesStore","_classCallCheck","categories","makeAutoObservable","this","_createClass","key","search","filter","includes","categoryValue","find","_ref2","newCategory","uuidv4","push","CostsStore","costs","filteredCosts","chartData","searchFilter","startDate","endDate","categoriesFilter","chartModalVisible","costId","index","findIndex","_ref3","splice","_this","_cost$category","isFiltered","getTime","setDate","getDate","sort","a","b","_this2","isUncategorizedExist","some","_ref4","labels","map","_ref5","_ref6","_ref7","reduce","_ref8","datasets","_ref9","_ref10","backgroundColor","color","i","Math","floor","random","getRandomColor"],"sourceRoot":""}
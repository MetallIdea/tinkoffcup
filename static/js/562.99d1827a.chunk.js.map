{"version":3,"file":"static/js/562.99d1827a.chunk.js","mappings":"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","sources":["core/components/form/FormField.tsx","modules/CostsList/CostsList.module.scss","store/ChartStore.ts","core/helpers/colors.ts","modules/CostsList/CostsListHeader.tsx","modules/CostsList/CostsListFooter.tsx","modules/CostsList/modals/ChartModal.tsx","modules/CostsList/modals/DeleteConfirmationModal.tsx","modules/CostsList/modals/CategoriesModal.tsx","modules/CostsList/CostsList.tsx","store/CategoriesStore.ts","store/CostsStore.ts"],"sourcesContent":["import { PropsWithChildren } from 'react';\n\nexport type FormFieldProps = PropsWithChildren & {\n  name: string;\n  label?: string;\n  helpText?: string;\n  error?: string;\n  maxWidth?: string;\n}\n\nexport function FormField({ name, label, helpText, error, maxWidth, children }: FormFieldProps) {\n  return (\n    <div className=\"flex flex-column gap-2\" style={{maxWidth}}>\n      <label htmlFor={name}>{label}</label>\n      {children}\n      {\n        helpText ? (\n          <small id={`${name}-help`}>\n            {helpText}\n          </small>\n        ) : null\n      }\n      {\n        error ? (\n        <small id={`${name}-error`} className=\"p-error\">\n          {error}\n        </small>\n        ) : null\n      }\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {};","import { makeAutoObservable } from 'mobx';\nimport { categoriesStore } from './CategoriesStore';\nimport { ChartData } from 'chart.js';\nimport { getRandomColor } from '../core/helpers/colors';\nimport { costsStore } from './CostsStore';\n\nexport class ChartStore {\n  costsStore = costsStore;\n\n  categoriesStore = categoriesStore;\n\n  chartData: ChartData | null = null;\n\n  chartModalVisible = false;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  showChartModal() {\n    this.chartModalVisible = true;\n  }\n\n  hideChartModal() {\n    this.chartModalVisible = false;\n  }\n\n  calculateChartData() {\n    const isUncategorizedExist = this.costsStore.filteredCosts.some(({ category }) => !category);\n\n    const labels = this.categoriesStore.categories.map(({title}) => title);\n\n    if (isUncategorizedExist) {\n      labels.push('uncategorized');\n    }\n\n    const data = this.categoriesStore.categories.map(({ id }) =>\n      this.costsStore.filteredCosts.filter(({ category }) => id === category?.id)\n        .reduce((prev, curr) => prev + curr.cost, 0));\n\n    if (isUncategorizedExist) {\n      data.push(this.costsStore.filteredCosts.filter(({ category }) => !category)\n        .reduce((prev, curr) => prev + curr.cost, 0))\n    }\n\n    this.chartData = {\n      labels,\n      datasets: [\n        {\n          data: this.categoriesStore.categories.map(({ id }) =>\n            this.costsStore.filteredCosts.filter(({ category }) => id === category?.id)\n              .reduce((prev, curr) => prev + curr.cost, 0)),\n\n          backgroundColor: this.categoriesStore.categories.map(() => getRandomColor()),\n        }\n      ],\n    }\n  }\n}\n\nexport const chartStore = new ChartStore();\n","export function getRandomColor() {\n  var letters = '0123456789ABCDEF';\n  var color = '#';\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n","import { observer } from 'mobx-react-lite';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'primereact/button';\nimport { InputText } from 'primereact/inputtext';\nimport { costsStore } from '../../store/CostsStore';\nimport { ChangeEventHandler } from 'react';\nimport { Calendar, CalendarChangeEvent } from 'primereact/calendar';\nimport { FormField } from '../../core/components/form/FormField';\nimport { Dropdown, DropdownChangeEvent } from 'primereact/dropdown';\nimport { categoriesStore } from '../../store/CategoriesStore';\nimport { chartStore } from '../../store/ChartStore';\n\nexport const CostsListHeader = observer(function CostsListHeader() {\n  const handleChangeSearch: ChangeEventHandler<HTMLInputElement> = (event) => {\n    costsStore.filterCost(event.target.value);\n  }\n\n  const handleChangeStartDate = (event: CalendarChangeEvent) => {\n    costsStore.filterByStartDate(event.value instanceof Date ? event.value : null);\n  }\n\n  const handleChangeEndDate = (event: CalendarChangeEvent) => {\n    costsStore.filterByEndDate(event.value instanceof Date ? event.value : null);\n  }\n\n  const handleChangeCategory = (event: DropdownChangeEvent) => {\n    costsStore.filterByCategories(event.value);\n  }\n\n  const handleClickViewChart = () => {\n    chartStore.showChartModal();\n  }\n\n  const handleClickCategories = () => {\n    categoriesStore.showCategoriesModal();\n  }\n\n  return (\n    <div className=\"flex justify-content-between align-items-center\">\n      <div className=\"flex justify-content-between align-items-center gap-2\">\n        <Link to=\"/costs/new\">\n          <Button label=\"New\" />\n        </Link>\n\n        <Button onClick={handleClickViewChart} label=\"View chart\" />\n        <Button onClick={handleClickCategories} label=\"View categories\" />\n      </div>\n\n      <div className=\"flex justify-content-end align-items-center gap-2\">\n        <FormField name=\"text\" label=\"Filter by title and cost\">\n          <InputText onChange={handleChangeSearch} />\n        </FormField>\n        <FormField name=\"startDate\" label=\"Start date\">\n          <Calendar maxDate={costsStore.endDate ?? undefined} showIcon dateFormat=\"dd.mm.yy\" id=\"startDate\" name=\"startDate\" showButtonBar onChange={handleChangeStartDate} />\n        </FormField>\n        <FormField name=\"endDate\" label=\"End date\">\n          <Calendar minDate={costsStore.startDate ?? undefined} showIcon dateFormat=\"dd.mm.yy\" id=\"endDate\" name=\"endDate\" showButtonBar onChange={handleChangeEndDate} />\n        </FormField>\n        <FormField name=\"date\" label=\"Filter by category\">\n          <Dropdown\n            value={costsStore.categoriesFilter}\n            options={categoriesStore.categories}\n            optionLabel=\"title\"\n            optionValue=\"id\"\n            onChange={handleChangeCategory}\n            showClear\n          />\n        </FormField>\n      </div>\n    </div>\n  )\n});\n","import { observer } from 'mobx-react-lite';\nimport { costsStore } from '../../store/CostsStore';\n\nexport const CostsListFooter = observer(function CostsListFooter() {\n  const numberFormat = Intl.NumberFormat();\n  return (\n    <div>\n      <div>\n        Total items: {costsStore.filteredCosts.length}\n      </div>\n      <div>\n        Total spent: {numberFormat.format(costsStore.filteredCosts.reduce((prev, curr) => prev + curr.cost, 0))}\n      </div>\n    </div>\n  )\n});\n","import { observer } from 'mobx-react-lite';\nimport { Dialog } from 'primereact/dialog';\nimport { costsStore } from '../../../store/CostsStore';\nimport { Chart } from 'primereact/chart';\nimport { useEffect } from 'react';\nimport { chartStore } from '../../../store/ChartStore';\n\nexport const ChartModal = observer(function ChartModal() {\n  useEffect(() => {\n    chartStore.calculateChartData();\n  }, []);\n\n  const handleHide = () => {\n    chartStore.hideChartModal();\n  }\n\n  if (!chartStore.chartModalVisible) {\n    return null;\n  }\n\n  return (\n    <Dialog visible onHide={handleHide}>\n      {\n        costsStore.filteredCosts.length ? (\n          <Chart type=\"doughnut\" data={chartStore.chartData as object} options={{\n            cutout: '60%'\n          }} className=\"w-full md:w-30rem\" />\n        ) : <div className=\"text-center\">No data</div>\n      }\n    </Dialog>\n  )\n})\n","import { observer } from 'mobx-react-lite';\nimport { ConfirmDialog } from 'primereact/confirmdialog';\nimport { costsStore } from '../../../store/CostsStore';\n\nexport const DeleteConfirmationModal = observer(function DeleteConfirmationModal() {\n  if (!costsStore.deleteItemId) {\n    return null;\n  }\n\n  const handleClick = (result: string) => {\n    if (result === 'accept' && costsStore.deleteItemId) {\n      costsStore.deleteCost(costsStore.deleteItemId);\n    }\n    costsStore.hideDeleteModal();\n  }\n\n  return (\n    <ConfirmDialog\n      visible\n      header={<>Are you sure to delete this cost?</>}\n      acceptLabel=\"Delete\"\n      onHide={handleClick}\n    />\n  )\n})\n","import { observer } from 'mobx-react-lite';\nimport { Dialog } from 'primereact/dialog';\nimport { categoriesStore } from '../../../store/CategoriesStore';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\n\nexport const CategoriesModal = observer(function CategoriesModal() {\n  if (!categoriesStore.categoriesModalVisible) {\n    return null;\n  }\n\n  const handleHide = () => {\n    categoriesStore.hideCategoriesModal();\n  }\n\n  return (\n    <Dialog visible onHide={handleHide}>\n      <DataTable value={categoriesStore.categories}>\n        <Column header=\"Title\" field=\"title\" />\n      </DataTable>\n    </Dialog>\n  )\n})\n","import { observer } from 'mobx-react-lite';\nimport styles from './CostsList.module.scss';\nimport { costsStore } from '../../store/CostsStore';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'primereact/button';\nimport { Badge } from 'primereact/badge';\nimport { PrimeIcons } from 'primereact/api';\nimport { DataTable } from 'primereact/datatable';\nimport { CostsListHeader } from './CostsListHeader';\nimport { CostsListFooter } from './CostsListFooter';\nimport { Column } from 'primereact/column';\nimport { Cost } from '../../core/types/costs';\nimport { useEffect } from 'react';\nimport { ChartModal } from './modals/ChartModal';\nimport { DeleteConfirmationModal } from './modals/DeleteConfirmationModal';\nimport { CategoriesModal } from './modals/CategoriesModal';\n\nexport const CostsList = observer(function CostsList() {\n  const numberFormat = Intl.NumberFormat();\n  const dateFormat = Intl.DateTimeFormat();\n\n  useEffect(() => {\n    costsStore.filter();\n\n    return () => costsStore.resetFilter();\n  }, []);\n\n  const handleDelete = (id: string) => () => {\n    costsStore.showDeleteModal(id)\n  }\n\n  return (\n    <div className={styles.self}>\n      <DataTable<Cost[]>\n        value={costsStore.filteredCosts}\n        tableStyle={{ minWidth: '50rem' }}\n        header={<CostsListHeader />}\n        footer={<CostsListFooter />}>\n        <Column header=\"Title\" field=\"title\" body={(row: Cost) => <Link to={`/costs/${row.id}`}>{row.title}</Link>} />\n        <Column header=\"Category\" field=\"category\" body={(row: Cost) => <Badge value={row.category?.title ?? 'uncategorized'} />} />\n        <Column header=\"Cost\" field=\"cost\" body={(row: Cost) => numberFormat.format(row.cost)} />\n        <Column header=\"Date\" field=\"date\" body={(row: Cost) => dateFormat.format(row.date)} />\n        <Column\n          body={\n          (row: Cost) =>\n            <Button onClick={handleDelete(row.id)} icon={PrimeIcons.TRASH} rounded text severity=\"danger\" aria-label=\"Delete\" />\n          }\n        />\n      </DataTable>\n\n      <ChartModal />\n      <DeleteConfirmationModal />\n      <CategoriesModal />\n    </div>\n  )\n});\n","import { makeAutoObservable } from 'mobx';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Category } from '../core/types/costs';\n\nexport class CategoriesStore {\n  categories: Category[] = [];\n\n  categoriesModalVisible = false;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  findCategories(search: string): Category[] {\n    return this.categories.filter(({ title }) => title.includes(search));\n  }\n\n  ensureCategory(categoryValue: Category | string | null): Category | null {\n    if (typeof categoryValue === 'string') {\n      const category = this.categories.find(({ title }) => title === categoryValue);\n      if (!category) {\n        const newCategory = {\n          id: uuidv4(),\n          title: categoryValue\n        };\n        this.categories.push(newCategory);\n\n        return newCategory;\n      }\n\n      return category;\n    }\n\n    return categoryValue;\n  }\n\n  showCategoriesModal() {\n    this.categoriesModalVisible = true;\n  }\n\n  hideCategoriesModal() {\n    this.categoriesModalVisible = false;\n  }\n}\n\nexport const categoriesStore = new CategoriesStore();\n","import { makeAutoObservable } from 'mobx';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Cost } from '../core/types/costs';\nimport { categoriesStore } from './CategoriesStore';\n\nexport class CostsStore {\n  categoriesStore = categoriesStore;\n\n  costs: Cost[] = [];\n\n  cost?: Cost;\n\n  filteredCosts: Cost[] = [];\n\n  searchFilter = '';\n\n  startDate: Date | null = null;\n\n  endDate: Date | null = null;\n\n  categoriesFilter: string | null = null;\n\n  deleteItemId: string | null = null;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  fetchCost(costId: string) {\n    this.cost = this.costs.find(({ id}) => id === costId);\n  }\n\n  setCost(cost: Cost) {\n    this.cost = cost;\n  }\n\n  createCost(cost: Cost): Cost {\n    cost.id = uuidv4();\n\n    this.costs.push(cost);\n\n    return cost;\n  }\n\n  updateCost(cost: Cost): Cost {\n    const index = this.costs.findIndex(({ id}) => id === cost.id);\n\n    if (index > -1) {\n      this.costs[index] = cost;\n    }\n\n    return cost;\n  }\n\n  deleteCost(costId: string): void {\n    const index = this.costs.findIndex(({ id}) => id === costId);\n\n    if (index > -1) {\n      this.costs.splice(index, 1);\n      this.filter();\n    }\n  }\n\n  filterCost(text: string): void {\n    this.searchFilter = text;\n    this.filter();\n  }\n\n  filterByStartDate(date: Date | null): void {\n    this.startDate = date;\n    this.filter();\n  }\n\n  filterByEndDate(date: Date | null): void {\n    this.endDate = date;\n    this.filter();\n  }\n\n  filterByCategories(category: string | null): void {\n    this.categoriesFilter = category;\n    this.filter();\n  }\n\n  filter() {\n    this.filteredCosts = this.costs.filter((cost) => {\n      let isFiltered = true;\n      if (this.searchFilter) {\n        isFiltered = isFiltered && cost.title.includes(this.searchFilter)\n      }\n      if (this.startDate) {\n        isFiltered = isFiltered\n          && cost.date.getTime() > this.startDate.getTime()\n      }\n      if (this.endDate) {\n        const endDate = new Date(this.endDate);\n        endDate.setDate(this.endDate.getDate() + 1)\n        isFiltered = isFiltered\n          && cost.date.getTime() < endDate.getTime()\n      }\n\n      if (this.categoriesFilter) {\n        isFiltered = isFiltered\n          && cost.category?.id === this.categoriesFilter;\n      }\n\n      return isFiltered;\n    }).sort((a, b) => {\n      return a.date > b.date ? -1 : 1;\n    });\n  }\n\n  resetFilter() {\n    this.searchFilter = '';\n    this.startDate = null;\n    this.endDate = null;\n    this.categoriesFilter = null;\n  }\n\n  showDeleteModal(id: string) {\n    this.deleteItemId = id;\n  }\n\n  hideDeleteModal() {\n    this.deleteItemId = null;\n  }\n}\n\nexport const costsStore = new CostsStore();\n"],"names":["FormField","_ref","name","label","helpText","error","maxWidth","children","_jsxs","className","style","_jsx","htmlFor","id","concat","chartStore","ChartStore","_classCallCheck","costsStore","categoriesStore","chartData","chartModalVisible","makeAutoObservable","this","_createClass","key","value","_this","isUncategorizedExist","filteredCosts","some","category","labels","categories","map","_ref2","title","push","data","_ref3","filter","_ref4","reduce","prev","curr","cost","_ref5","datasets","_ref6","_ref7","backgroundColor","color","i","Math","floor","random","getRandomColor","CostsListHeader","observer","_costsStore$endDate","_costsStore$startDate","Link","to","Button","onClick","showChartModal","InputText","onChange","event","target","Calendar","maxDate","undefined","showIcon","dateFormat","showButtonBar","Date","minDate","Dropdown","options","optionLabel","optionValue","showClear","CostsListFooter","numberFormat","Intl","NumberFormat","format","ChartModal","useEffect","calculateChartData","Dialog","visible","onHide","hideChartModal","Chart","type","cutout","DeleteConfirmationModal","ConfirmDialog","header","_Fragment","acceptLabel","result","CategoriesModal","DataTable","Column","field","CostsList","DateTimeFormat","styles","tableStyle","minWidth","footer","body","row","_row$category$title","_row$category","Badge","date","icon","PrimeIcons","rounded","text","severity","CategoriesStore","categoriesModalVisible","search","includes","categoryValue","find","newCategory","uuidv4","CostsStore","costs","searchFilter","startDate","endDate","categoriesFilter","deleteItemId","costId","index","findIndex","splice","_cost$category","isFiltered","getTime","setDate","getDate","sort","a","b"],"sourceRoot":""}